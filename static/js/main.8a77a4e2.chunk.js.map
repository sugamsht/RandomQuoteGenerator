{"version":3,"sources":["reportWebVitals.js","components/Buttons.js","containers/QuoteBox.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Buttons","props","color","shareText","quote","author","class","TwitterShareButton","url","title","via","hashtags","id","style","background","className","FacebookShareButton","hashtag","onClick","handleChange","randomColor","luminosity","QuoteBox","useState","quotes","setQuotes","displayQuote","setdisplayQuote","setAuthor","useEffect","fetch","response","json","fetchedQuotes","quotePicker","Math","floor","random","document","body","backgroundColor","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"yKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCHC,SAASQ,EAAQC,GAC5B,IAAIC,EAAQD,EAAMC,MACdC,EAAS,UAAMF,EAAMG,MAAZ,aAAsBH,EAAMI,OAA5B,KAEb,OACI,sBAAKC,MAAM,SAAX,UAEI,cAACC,EAAA,EAAD,CAAoBC,IAAI,mDAAmDC,MAAON,EAAWO,IAAI,SAASC,SAAU,CAAC,uBAAuB,SAA5I,SACA,mBAAGC,GAAG,cAAcC,MAAO,CAAEC,WAAYZ,GACrCO,MAAM,8BADV,SAEI,mBAAGM,UAAU,oCAKjB,cAACC,EAAA,EAAD,CAAqBR,IAAI,mDAAmDJ,MAAOD,EAAYc,QAAQ,wBAAvG,SACI,mBAAGJ,MAAO,CAAEC,WAAYZ,GAASO,MAAM,+BAAvC,SACI,mBAAGH,MAAM,0BAGjB,wBAAQO,MAAO,CAAEC,WAAYZ,GAASU,GAAG,YACrCM,QAASjB,EAAMkB,aADnB,0B,oBCnBRjB,EAAQkB,IAAY,CACpBC,WAAY,SAID,SAASC,IAEtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOlB,EAAP,KAAeuB,EAAf,KAgCA,OAtBAC,qBAAU,WACRC,MAAM,0IACHpC,MAAK,SAAAqC,GAAQ,OAAIA,EAASC,UAC1BtC,MAAK,SAAAqC,GACJ,IAAME,EAAgBF,EAASP,OACzBU,EAAcC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpCZ,EAAUQ,GACVN,EAAgBM,EAAcC,GAAa9B,OAC3CwB,EAAUK,EAAcC,GAAa7B,aAIxC,IAEHwB,qBAAU,WACR3B,EAAOkB,IAAY,CACjBC,WAAY,WAEd,CAAChB,IAGHiC,SAASC,KAAK1B,MAAM2B,gBAAkBtC,EAEpC,qBAAKW,MAAO,CAAEX,SAASa,UAAU,aAAjC,SACE,sBAAKH,GAAG,YAAR,UAEE,oBAAGA,GAAG,OAAN,UAAa,mBAAGN,MAAM,mBAAT,eAAkCoB,EAA/C,OACA,oBAAGd,GAAG,SAAN,oBAAkBP,KAClB,cAACL,EAAD,CACEE,MAAOA,EACPiB,aArCR,WACE,IAAMe,EAAcC,KAAKC,MAAMD,KAAKE,SAAYb,EAAOiB,QACvDd,EAAgBH,EAAOU,GAAa9B,OACpCwB,EAAUJ,EAAOU,GAAa7B,SAmCxBD,MAAOsB,EACPrB,OAAQA,SC3CHqC,MAVf,WACE,OACE,qBAAK3B,UAAU,MAAf,SAEE,cAAC,EAAD,OCAN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFP,SAASQ,eAAe,SAM1BvD,M","file":"static/js/main.8a77a4e2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon } from \"react-share\";\r\n\r\n\r\nexport default function Buttons(props) {\r\n    var color = props.color\r\n    var shareText = `${props.quote} -${props.author} `\r\n\r\n    return (\r\n        <div class=\"button\">\r\n            \r\n            <TwitterShareButton url=\"https://sugamsht.github.io/RandomQuoteGenerator/\" title={shareText} via=\"Sugam_\" hashtags={[\"RandomQuoteGenerator\",\"React\"]}>\r\n            <a id='tweet-quote' style={{ background: color }}\r\n                title=\"Post this quote on twitter!\">\r\n                <i className=\"fab fa-twitter twitter-icon\" />\r\n            </a>\r\n            </TwitterShareButton>\r\n\r\n\r\n            <FacebookShareButton url=\"https://sugamsht.github.io/RandomQuoteGenerator/\" quote={shareText}  hashtag=\"#RandomQuoteGenerator\" >\r\n                <a style={{ background: color }} title=\"Post this quote on facebook!\" >\r\n                    <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n            </FacebookShareButton>\r\n            <button style={{ background: color }} id=\"new-quote\"\r\n                onClick={props.handleChange}>New Quote</button>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../Styles/QuoteBox.scss'\r\nimport Buttons from '../components/Buttons'\r\nimport randomColor from 'randomcolor'\r\n\r\nvar color = randomColor({\r\n    luminosity: 'dark',\r\n });\r\n\r\n\r\nexport default function QuoteBox() {\r\n\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [displayQuote, setdisplayQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n\r\n  function handleChange() {\r\n    const quotePicker = Math.floor(Math.random() * (quotes.length));\r\n    setdisplayQuote(quotes[quotePicker].quote)\r\n    setAuthor(quotes[quotePicker].author)\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const fetchedQuotes = response.quotes\r\n        const quotePicker = Math.floor(Math.random() * 100);\r\n        setQuotes(fetchedQuotes)\r\n        setdisplayQuote(fetchedQuotes[quotePicker].quote)\r\n        setAuthor(fetchedQuotes[quotePicker].author)\r\n\r\n      })\r\n\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    color= randomColor({\r\n      luminosity: 'dark',\r\n   })\r\n  },[author])\r\n\r\n \r\n  document.body.style.backgroundColor = color;\r\n  return (\r\n    <div style={{ color }} className=\"containter\" >\r\n      <div id=\"quote-box\">\r\n        \r\n        <p id=\"text\"><i class=\"fa fa-quote-left\"> </i>{displayQuote} </p>\r\n        <p id='author'>â€” {author}</p>\r\n        <Buttons \r\n          color={color} \r\n          handleChange={handleChange}\r\n          quote={displayQuote}\r\n          author={author}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}","import './QuoteBox'\r\nimport QuoteBox from './QuoteBox';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <QuoteBox />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './containers/App'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}